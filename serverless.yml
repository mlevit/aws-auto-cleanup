service: auto-cleanup

provider:
  name: aws
  runtime: python3.7
  stage: production
  region: ap-southeast-2
  profile: saml
  environment:
    PYTHONPATH: "/var/task/auto-cleanup:/var/runtime" # fixes issue of importing Python files from within a directory
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "dynamodb:BatchWriteItem"
        - "dynamodb:DeleteTable"
        - "dynamodb:DescribeTable"
        - "dynamodb:GetItem"
        - "dynamodb:ListTables"
        - "dynamodb:PutItem"
        - "dynamodb:Scan"
      Resource: "*"
    - Effect: "Allow"
      Action:
        - "cloudformation:DeleteStack"
        - "cloudformation:DescribeStacks"
      Resource: "*"
    - Effect: "Allow"
      Action:
        - "ec2:DeleteSnapshot"
        - "ec2:DeleteVolume"
        - "ec2:DescribeAddresses"
        - "ec2:DescribeImages"
        - "ec2:DescribeInstanceAttribute"
        - "ec2:DescribeInstances"
        - "ec2:DescribeSnapshots"
        - "ec2:DescribeVolumes"
        - "ec2:DescribeVolumes"
        - "ec2:ModifyInstanceAttribute"
        - "ec2:ReleaseAddress"
        - "ec2:StopInstances"
        - "ec2:TerminateInstances"
      Resource: "*"
    - Effect: "Allow"
      Action:
        - "lambda:DeleteFunction"
        - "lambda:ListFunctions"
      Resource: "*"
    - Effect: "Allow"
      Action:
        - "rds:DeleteDBInstance"
        - "rds:DeleteDBSnapshot"
        - "rds:DescribeDBInstances"
        - "rds:DescribeDBSnapshots"
        - "rds:ModifyDBInstance"
      Resource: "*"
    - Effect: "Allow"
      Action:
        - "redshift:DeleteCluster"
        - "redshift:DeleteClusterSnapshot"
        - "redshift:DescribeClusterSnapshots"
        - "redshift:DescribeClusters"
      Resource: "*"
    - Effect: "Allow"
      Action:
        - "s3:DeleteBucket"
        - "s3:DeleteObject"
        - "s3:DeleteObjectVersion"
        - "s3:List*"
      Resource: "*"

functions:
  AutoCleanup:
    handler: auto-cleanup.handler.handler
    name: auto-cleanup-${self:provider.stage}
    description: Auto Cleanup removes unused AWS resources
    memorySize: 128
    timeout: 300
    package:
      include: 
        - auto-cleanup/**
        - data/**
    environment:
      SETTINGSTABLE: auto-cleanup-settings-${self:provider.stage}
      WHITELISTTABLE: auto-cleanup-whitelist-${self:provider.stage}
      LOGLEVEL: INFO
    events:
      - schedule:
          rate: rate(3 days)
          enabled: true

resources:
  Resources:
    SettingsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: auto-cleanup-settings-${self:provider.stage}
        AttributeDefinitions:
          - AttributeName: key
            AttributeType: S
          - AttributeName: category
            AttributeType: S
        KeySchema:
          - AttributeName: key
            KeyType: HASH
          - AttributeName: category
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    WhitelistTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: auto-cleanup-whitelist-${self:provider.stage}
        AttributeDefinitions:
          - AttributeName: resource_id
            AttributeType: S
          - AttributeName: expire_at
            AttributeType: N
        KeySchema:
          - AttributeName: resource_id
            KeyType: HASH
          - AttributeName: expire_at
            KeyType: RANGE
        TimeToLiveSpecification:
          AttributeName: expire_at
          Enabled: true
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1